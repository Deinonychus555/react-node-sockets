{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/jaea/Programacion/JS/react-messaging-app/client/src/components/Conversations/Conversations.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { ListGroup } from 'react-bootstrap';\nimport { useConversations } from '../../contexts/ConversationsProvider';\n\nconst Conversations = () => {\n  _s();\n\n  const oc = useConversations();\n  const {\n    conversations,\n    selectConversationIndex\n  } = useConversations();\n  console.log('Conversations');\n  console.log(oc);\n  console.log(conversations);\n  console.log(conversations.map(c => c));\n  const conversations_ = conversations.map((conversation, i) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n    action: true,\n    onClick: () => selectConversationIndex(i),\n    active: conversation.selected,\n    children: conversations.recipient.map(r => r.name).join(', ')\n  }, i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this));\n  return {\n    conversarions_\n  };\n  return /*#__PURE__*/_jsxDEV(ListGroup, {\n    variant: \"flush\",\n    children: conversations.map((conversation, i) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n      action: true,\n      onClick: () => selectConversationIndex(i),\n      active: conversation.selected,\n      children: conversations.recipient.map(r => r.name).join(', ')\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 15\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Conversations, \"pwn5NhGR1edYZaSvpq/GrLZ1T+g=\", false, function () {\n  return [useConversations, useConversations];\n});\n\n_c = Conversations;\nexport default Conversations;\n\nvar _c;\n\n$RefreshReg$(_c, \"Conversations\");","map":{"version":3,"sources":["/home/jaea/Programacion/JS/react-messaging-app/client/src/components/Conversations/Conversations.js"],"names":["React","ListGroup","useConversations","Conversations","oc","conversations","selectConversationIndex","console","log","map","c","conversations_","conversation","i","selected","recipient","r","name","join","conversarions_"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAQC,SAAR,QAAwB,iBAAxB;AACA,SAAQC,gBAAR,QAA+B,sCAA/B;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AACxB,QAAMC,EAAE,GAAGF,gBAAgB,EAA3B;AACA,QAAM;AAACG,IAAAA,aAAD;AAAgBC,IAAAA;AAAhB,MAA2CJ,gBAAgB,EAAjE;AAEAK,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYJ,EAAZ;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYH,aAAZ;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYH,aAAa,CAACI,GAAd,CAAkBC,CAAC,IAAIA,CAAvB,CAAZ;AACA,QAAMC,cAAc,GAAGN,aAAa,CAACI,GAAd,CAAkB,CAACG,YAAD,EAAeC,CAAf,kBACrC,QAAC,SAAD,CAAW,IAAX;AAEE,IAAA,MAAM,MAFR;AAGE,IAAA,OAAO,EAAE,MAAMP,uBAAuB,CAACO,CAAD,CAHxC;AAIE,IAAA,MAAM,EAAED,YAAY,CAACE,QAJvB;AAAA,cAMKT,aAAa,CAACU,SAAd,CAAwBN,GAAxB,CAA4BO,CAAC,IAAIA,CAAC,CAACC,IAAnC,EAAyCC,IAAzC,CAA8C,IAA9C;AANL,KACOL,CADP;AAAA;AAAA;AAAA;AAAA,UADmB,CAAvB;AAUA,SAAO;AAACM,IAAAA;AAAD,GAAP;AACA,sBACE,QAAC,SAAD;AAAW,IAAA,OAAO,EAAC,OAAnB;AAAA,cACKd,aAAa,CAACI,GAAd,CAAkB,CAACG,YAAD,EAAeC,CAAf,kBACf,QAAC,SAAD,CAAW,IAAX;AAEE,MAAA,MAAM,MAFR;AAGE,MAAA,OAAO,EAAE,MAAMP,uBAAuB,CAACO,CAAD,CAHxC;AAIE,MAAA,MAAM,EAAED,YAAY,CAACE,QAJvB;AAAA,gBAMKT,aAAa,CAACU,SAAd,CAAwBN,GAAxB,CAA4BO,CAAC,IAAIA,CAAC,CAACC,IAAnC,EAAyCC,IAAzC,CAA8C,IAA9C;AANL,OACOL,CADP;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADF;AAcH,CAjCD;;GAAMV,a;UACSD,gB,EACsCA,gB;;;KAF/CC,a;AAmCN,eAAeA,aAAf","sourcesContent":["import React from 'react';\n\nimport {ListGroup} from 'react-bootstrap';\nimport {useConversations} from '../../contexts/ConversationsProvider';\n\nconst Conversations = () => {\n    const oc = useConversations();\n    const {conversations, selectConversationIndex} = useConversations();\n    \n    console.log('Conversations');\n    console.log(oc);\n    console.log(conversations);\n    console.log(conversations.map(c => c));\n    const conversations_ = conversations.map((conversation, i) => (\n        <ListGroup.Item \n          key={i}\n          action\n          onClick={() => selectConversationIndex(i)}\n          active={conversation.selected}\n          >\n            {conversations.recipient.map(r => r.name).join(', ')}\n        </ListGroup.Item>\n    ))\n    return {conversarions_}\n    return (\n      <ListGroup variant='flush'>\n          {conversations.map((conversation, i) => (\n              <ListGroup.Item \n                key={i}\n                action\n                onClick={() => selectConversationIndex(i)}\n                active={conversation.selected}\n                >\n                  {conversations.recipient.map(r => r.name).join(', ')}\n              </ListGroup.Item>\n          ))}\n      </ListGroup>\n    )\n}\n\nexport default Conversations\n"]},"metadata":{},"sourceType":"module"}