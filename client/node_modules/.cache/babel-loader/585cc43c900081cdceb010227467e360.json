{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nconst PREFIX = 'react-messaging-app-';\nexport default function useLocalStorage(key, initialValue) {\n  _s();\n\n  const prefixedKey = PREFIX + key;\n  cont[(value, setValue)] = useState(() => {\n    const jasonValue = localStorage.getItem(prefixedKey);\n    if (jsonValue !== null) return JSON.parse(jsonValue);\n\n    if (typeof initialValue === 'function') {\n      return initialValue();\n    } else {\n      return initialValue;\n    }\n  });\n  useEffect(() => {\n    localStorage.setItem(prefixedKey, JSON.stringify(value));\n  }, [prefixedKey, value]);\n  return [value, setValue];\n}\n\n_s(useLocalStorage, \"tceZ26L6x/XzbolRzMAtHHqTcMk=\");","map":{"version":3,"sources":["/home/jaea/Programacion/JS/react-messaging-app/client/src/hooks/useLocalStorage.js"],"names":["React","useEffect","useState","PREFIX","useLocalStorage","key","initialValue","prefixedKey","cont","value","setValue","jasonValue","localStorage","getItem","jsonValue","JSON","parse","setItem","stringify"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,MAAMC,MAAM,GAAC,sBAAb;AAEA,eAAe,SAASC,eAAT,CAAyBC,GAAzB,EAA8BC,YAA9B,EAA2C;AAAA;;AACtD,QAAMC,WAAW,GAAGJ,MAAM,GAAGE,GAA7B;AACAG,EAAAA,IAAI,EAAEC,KAAK,EAAEC,QAAT,EAAJ,GAAyBR,QAAQ,CAAC,MAAM;AACpC,UAAMS,UAAU,GAAGC,YAAY,CAACC,OAAb,CAAqBN,WAArB,CAAnB;AACA,QAAIO,SAAS,KAAK,IAAlB,EAAwB,OAAOC,IAAI,CAACC,KAAL,CAAWF,SAAX,CAAP;;AACxB,QAAI,OAAOR,YAAP,KAAwB,UAA5B,EAAuC;AACnC,aAAOA,YAAY,EAAnB;AACH,KAFD,MAEM;AACF,aAAOA,YAAP;AACH;AACJ,GARgC,CAAjC;AAUAL,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,YAAY,CAACK,OAAb,CAAqBV,WAArB,EAAkCQ,IAAI,CAACG,SAAL,CAAeT,KAAf,CAAlC;AACH,GAFQ,EAEN,CAACF,WAAD,EAAcE,KAAd,CAFM,CAAT;AAGA,SAAO,CAACA,KAAD,EAAQC,QAAR,CAAP;AACH;;GAhBuBN,e","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst PREFIX='react-messaging-app-';\n\nexport default function useLocalStorage(key, initialValue){\n    const prefixedKey = PREFIX + key;\n    cont [value, setValue] = useState(() => {\n        const jasonValue = localStorage.getItem(prefixedKey);\n        if (jsonValue !== null) return JSON.parse(jsonValue);\n        if (typeof initialValue === 'function'){\n            return initialValue();\n        }else {\n            return initialValue;\n        }\n    })\n\n    useEffect(() => {\n        localStorage.setItem(prefixedKey, JSON.stringify(value))\n    }, [prefixedKey, value])\n    return [value, setValue]\n}"]},"metadata":{},"sourceType":"module"}