{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nconst PREFIX = 'react-messaging-app-';\nexport default function useLocalStorage(key, initialValue) {\n  _s();\n\n  const prefixedKey = PREFIX + key.replace(PREFIX, '');\n  const [value, setValue] = useState(() => {\n    const jsonValue = localStorage.getItem(prefixedKey);\n    if (jsonValue !== null) return JSON.parse(jsonValue);\n\n    if (typeof initialValue === 'function') {\n      return initialValue();\n    } else {\n      return initialValue;\n    }\n  });\n  useEffect(() => {\n    localStorage.setItem(prefixedKey, JSON.stringify(value));\n  }, [prefixedKey, value]);\n  return [value, setValue];\n}\n\n_s(useLocalStorage, \"ALPjm07+vzxVGpc9nSO99T+NR/4=\");","map":{"version":3,"sources":["/home/jaea/Programacion/JS/react-messaging-app/client/src/hooks/useLocalStorage.js"],"names":["useEffect","useState","PREFIX","useLocalStorage","key","initialValue","prefixedKey","replace","value","setValue","jsonValue","localStorage","getItem","JSON","parse","setItem","stringify"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,MAAMC,MAAM,GAAC,sBAAb;AAEA,eAAe,SAASC,eAAT,CAAyBC,GAAzB,EAA8BC,YAA9B,EAA2C;AAAA;;AACtD,QAAMC,WAAW,GAAGJ,MAAM,GAAGE,GAAG,CAACG,OAAJ,CAAYL,MAAZ,EAAoB,EAApB,CAA7B;AAEA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,MAAM;AACrC,UAAMS,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqBN,WAArB,CAAlB;AACA,QAAII,SAAS,KAAK,IAAlB,EAAwB,OAAOG,IAAI,CAACC,KAAL,CAAWJ,SAAX,CAAP;;AACxB,QAAI,OAAOL,YAAP,KAAwB,UAA5B,EAAuC;AACnC,aAAOA,YAAY,EAAnB;AACH,KAFD,MAEM;AACF,aAAOA,YAAP;AACH;AACJ,GARiC,CAAlC;AAUAL,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,YAAY,CAACI,OAAb,CAAqBT,WAArB,EAAkCO,IAAI,CAACG,SAAL,CAAeR,KAAf,CAAlC;AACH,GAFQ,EAEN,CAACF,WAAD,EAAcE,KAAd,CAFM,CAAT;AAIA,SAAO,CAACA,KAAD,EAAQC,QAAR,CAAP;AACH;;GAlBuBN,e","sourcesContent":["import { useEffect, useState } from 'react';\n\nconst PREFIX='react-messaging-app-';\n\nexport default function useLocalStorage(key, initialValue){\n    const prefixedKey = PREFIX + key.replace(PREFIX, '');\n\n    const [value, setValue] = useState(() => {\n        const jsonValue = localStorage.getItem(prefixedKey);\n        if (jsonValue !== null) return JSON.parse(jsonValue);\n        if (typeof initialValue === 'function'){\n            return initialValue();\n        }else {\n            return initialValue;\n        }\n    })\n\n    useEffect(() => {\n        localStorage.setItem(prefixedKey, JSON.stringify(value))\n    }, [prefixedKey, value])\n\n    return [value, setValue]\n}"]},"metadata":{},"sourceType":"module"}