{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/jaea/Programacion/JS/react-messaging-app/client/src/components/OpenConversation/OpenConversation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { Form, InputGroup, Button } from 'react-bootstrap';\nimport { useConversations } from '../../contexts/ConversationsProvider';\n\nconst OpenConversation = () => {\n  _s();\n\n  const [text, setText] = useState();\n  const {\n    sendMessage,\n    selectedConversation\n  } = useConversations();\n  const lastMessageRef = useRef(null);\n  const setRef = useCallback(node => {\n    node.scrollIntoView({\n      smoot: true\n    });\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    sendMessage(selectedConversation.recipients.map(r => r.id), text);\n    setText('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex flex-column flex-grow-1\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow-1 overflow-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column justify-content-start align-items-end px-3\",\n        children: selectedConversation.messages.map((message, i) => {\n          const lastMessage = selectedConversation.messages.length - 1 === i;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"my-1 d-flex flex-column\",\n            ref: lastMessage ? setRef : null,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `rounded px-2 py-1 ${message.fromMe ? 'bg-primary text-white' : 'border'}`,\n              children: message.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `text-muted-small ${message.fromMe ? 'text-right' : ''}`,\n              children: message.fromMe ? 'You' : message.senderName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 33\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"m-2\",\n        children: /*#__PURE__*/_jsxDEV(InputGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            required: true,\n            value: text,\n            onChange: e => setText(e.target.value),\n            style: {\n              height: '75px',\n              resize: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(InputGroup.Append, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(OpenConversation, \"eYfDdS1MSyu5AWHxbHPwyssSNFs=\", false, function () {\n  return [useConversations];\n});\n\n_c = OpenConversation;\nexport default OpenConversation;\n\nvar _c;\n\n$RefreshReg$(_c, \"OpenConversation\");","map":{"version":3,"sources":["/home/jaea/Programacion/JS/react-messaging-app/client/src/components/OpenConversation/OpenConversation.js"],"names":["React","useState","useRef","useEffect","useCallback","Form","InputGroup","Button","useConversations","OpenConversation","text","setText","sendMessage","selectedConversation","lastMessageRef","setRef","node","scrollIntoView","smoot","handleSubmit","e","preventDefault","recipients","map","r","id","messages","message","i","lastMessage","length","fromMe","senderName","target","value","height","resize"],"mappings":"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","sourcesContent":["import React, {useState, useRef, useEffect, useCallback} from 'react';\nimport { Form, InputGroup, Button } from 'react-bootstrap';\n\nimport {  useConversations } from '../../contexts/ConversationsProvider';\n\nconst OpenConversation = () => {\n\n    const [text, setText] = useState();\n    const { sendMessage, selectedConversation} = useConversations();\n    const lastMessageRef = useRef(null)\n    const setRef = useCallback(node => {\n        node.scrollIntoView({smoot: true});  \n    });\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        sendMessage(\n            selectedConversation.recipients.map(r => r.id),\n            text\n        );\n        setText('');\n    }\n\n   \n    return (\n        <div className='d-flex flex-column flex-grow-1'>\n            <div className=\"flex-grow-1 overflow-auto\">\n                <div className='d-flex flex-column justify-content-start align-items-end px-3'>\n                    {selectedConversation.messages.map((message, i) => {\n                        const lastMessage = selectedConversation.messages.length -1 === i;\n                        return (\n                            <div \n                                className='my-1 d-flex flex-column'\n                                key={i}\n                                ref={lastMessage ? setRef: null}\n                            >\n                                <div\n                                    className={`rounded px-2 py-1 ${message.fromMe ? 'bg-primary text-white' : 'border'}`}\n                                >\n                                    {message.text}\n                                </div>\n                                <div\n                                    className={`text-muted-small ${message.fromMe ? 'text-right' : ''}`}\n                                >\n                                    {message.fromMe ? 'You': message.senderName}\n                                </div>\n                            </div>\n                        )\n                    })}\n                </div>\n            </div>\n            <Form onSubmit={handleSubmit}>\n                <Form.Group className='m-2'>\n                    <InputGroup>\n                        <Form.Control\n                            as='textarea'\n                            required\n                            value={text}\n                            onChange={e => setText(e.target.value)}\n                            style={{height:'75px', resize: 'none'}}\n                        />\n                        <InputGroup.Append>\n                            <Button type='submit'>Send</Button>\n                        </InputGroup.Append>\n                    </InputGroup>\n                </Form.Group>\n            </Form>\n        </div>\n    )\n}\n\nexport default OpenConversation;\n"]},"metadata":{},"sourceType":"module"}