{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/jaea/Programacion/JS/react-messaging-app/client/src/contexts/ConversationsProvider.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, createContext } from 'react';\nimport useLocalStorage from '../hooks/useLocalStorage';\nconst ConversationsContext = /*#__PURE__*/createContext();\nexport const ConversationsProvider = ({\n  children\n}) => {\n  _s();\n\n  const [conversations, setConversations] = useLocalStorage('conversations', []);\n\n  const createConversation = recipients => {\n    setConversations(prevConversations => {\n      return [...prevConversations, {\n        recipients,\n        messages: []\n      }];\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(ConversationsContext.Provider, {\n    value: {\n      conversations,\n      createConversation\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ConversationsProvider, \"9L8V6GHkDskoUaMzXQxf9MBUh4s=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = ConversationsProvider;\nexport const useConversations = () => {\n  _s2();\n\n  return useContext(ContactsContext);\n};\n\n_s2(useConversations, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ConversationsProvider\");","map":{"version":3,"sources":["/home/jaea/Programacion/JS/react-messaging-app/client/src/contexts/ConversationsProvider.js"],"names":["React","useContext","createContext","useLocalStorage","ConversationsContext","ConversationsProvider","children","conversations","setConversations","createConversation","recipients","prevConversations","messages","useConversations","ContactsContext"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,aAA3B,QAAgD,OAAhD;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AAGA,MAAMC,oBAAoB,gBAAGF,aAAa,EAA1C;AAEA,OAAO,MAAMG,qBAAqB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAEnD,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCL,eAAe,CAAC,eAAD,EAAkB,EAAlB,CAAzD;;AAGA,QAAMM,kBAAkB,GAAIC,UAAD,IAAgB;AACvCF,IAAAA,gBAAgB,CAACG,iBAAiB,IAAI;AAClC,aAAO,CAAC,GAAGA,iBAAJ,EAAuB;AAACD,QAAAA,UAAD;AAAaE,QAAAA,QAAQ,EAAE;AAAvB,OAAvB,CAAP;AACH,KAFe,CAAhB;AAGH,GAJD;;AAMA,sBACI,QAAC,oBAAD,CAAsB,QAAtB;AAA+B,IAAA,KAAK,EAAE;AAACL,MAAAA,aAAD;AAAgBE,MAAAA;AAAhB,KAAtC;AAAA,cACKH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAhBM;;GAAMD,qB;UAEiCF,e;;;KAFjCE,qB;AAkBb,OAAO,MAAMQ,gBAAgB,GAAG;AAAA;;AAAA,SAAMZ,UAAU,CAACa,eAAD,CAAhB;AAAA,CAAzB;;IAAMD,gB","sourcesContent":["import React, {useContext, createContext } from 'react'\nimport useLocalStorage from '../hooks/useLocalStorage';\n\n\nconst ConversationsContext = createContext();\n\nexport const ConversationsProvider = ({ children }) => {\n\n    const [conversations, setConversations] = useLocalStorage('conversations', []);\n    \n\n    const createConversation = (recipients) => {\n        setConversations(prevConversations => {\n            return [...prevConversations, {recipients, messages: []}]\n        })\n    }\n\n    return (\n        <ConversationsContext.Provider value={{conversations, createConversation}}>\n            {children}\n        </ConversationsContext.Provider>\n    )\n}\n\nexport const useConversations = () => useContext(ContactsContext);\n"]},"metadata":{},"sourceType":"module"}