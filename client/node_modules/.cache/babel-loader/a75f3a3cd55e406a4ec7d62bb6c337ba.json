{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/jaea/Programacion/JS/react-messaging-app/client/src/components/NewConversationModal/NewConversationModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, Modal, Button } from 'react-bootstrap';\nimport { useContacts } from '../../contexts/ContactsProvider';\nimport { useConversations } from '../../contexts/ConversationsProvider';\n\nconst NewConversationModal = ({\n  closeModal\n}) => {\n  _s();\n\n  const {\n    contacts\n  } = useContacts();\n  const {\n    createConversation\n  } = useConversations();\n  const [selectedContactIds, setSelectedContactIds] = useState([]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    createConversation(selectedContactIds);\n    closeModal();\n  };\n\n  const handleCheckboxChange = contactId => {\n    setSelectedContactIds(prevSelectedContactsId => {\n      if (prevSelectedContactsId.includes(contactId)) {\n        return prevSelectedContactsId.filter(id => contactId !== id);\n      } else {\n        return [...prevSelectedContactsId, contactId];\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: \"Create Conversation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [contacts.map(contact => /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: contact.id,\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"checkbox\",\n            value: selectedContactIds.includes(contact.id),\n            onChange: () => handleCheckboxChange(contact.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this)\n        }, contact.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(NewConversationModal, \"S8JwY7KLa9QGfahqnHjh8NIE1N8=\", false, function () {\n  return [useContacts, useConversations];\n});\n\n_c = NewConversationModal;\nexport default NewConversationModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewConversationModal\");","map":{"version":3,"sources":["/home/jaea/Programacion/JS/react-messaging-app/client/src/components/NewConversationModal/NewConversationModal.js"],"names":["React","useState","Form","Modal","Button","useContacts","useConversations","NewConversationModal","closeModal","contacts","createConversation","selectedContactIds","setSelectedContactIds","handleSubmit","e","preventDefault","handleCheckboxChange","contactId","prevSelectedContactsId","includes","filter","id","map","contact"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,iBAApC;AAEA,SAAQC,WAAR,QAA0B,iCAA1B;AACA,SAAQC,gBAAR,QAA+B,sCAA/B;;AAEA,MAAMC,oBAAoB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAkB;AAAA;;AAE3C,QAAM;AAACC,IAAAA;AAAD,MAAaJ,WAAW,EAA9B;AACA,QAAM;AAACK,IAAAA;AAAD,MAAuBJ,gBAAgB,EAA7C;AACA,QAAM,CAACK,kBAAD,EAAqBC,qBAArB,IAA8CX,QAAQ,CAAC,EAAD,CAA5D;;AAEA,QAAMY,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACAL,IAAAA,kBAAkB,CAACC,kBAAD,CAAlB;AACAH,IAAAA,UAAU;AACb,GAJD;;AAMA,QAAMQ,oBAAoB,GAAIC,SAAD,IAAe;AACxCL,IAAAA,qBAAqB,CAACM,sBAAsB,IAAI;AAC5C,UAAIA,sBAAsB,CAACC,QAAvB,CAAgCF,SAAhC,CAAJ,EAA+C;AAC3C,eAAOC,sBAAsB,CAACE,MAAvB,CAA8BC,EAAE,IAAIJ,SAAS,KAAKI,EAAlD,CAAP;AACH,OAFD,MAEK;AACD,eAAO,CAAC,GAAGH,sBAAJ,EAA4BD,SAA5B,CAAP;AACH;AACJ,KANoB,CAArB;AAOH,GARD;;AAUA,sBACI;AAAA,4BACA,QAAC,KAAD,CAAO,MAAP;AAAc,MAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,KAAD,CAAO,IAAP;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEJ,YAAhB;AAAA,mBACKJ,QAAQ,CAACa,GAAT,CAAcC,OAAO,iBAClB,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAEA,OAAO,CAACF,EAA/B;AAAA,iCACI,QAAC,IAAD,CAAM,KAAN;AACI,YAAA,IAAI,EAAC,UADT;AAEI,YAAA,KAAK,EAAEV,kBAAkB,CAACQ,QAAnB,CAA4BI,OAAO,CAACF,EAApC,CAFX;AAGI,YAAA,QAAQ,EAAE,MAAML,oBAAoB,CAACO,OAAO,CAACF,EAAT;AAHxC;AAAA;AAAA;AAAA;AAAA;AADJ,WAAwCE,OAAO,CAACF,EAAhD;AAAA;AAAA;AAAA;AAAA,gBADH,CADL,eAUI,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBADJ;AAmBC,CAzCL;;GAAMd,oB;UAEiBF,W,EACUC,gB;;;KAH3BC,oB;AA2CN,eAAeA,oBAAf","sourcesContent":["import React, {useState} from 'react';\nimport { Form, Modal, Button } from 'react-bootstrap';\n\nimport {useContacts} from '../../contexts/ContactsProvider';\nimport {useConversations} from '../../contexts/ConversationsProvider';\n\nconst NewConversationModal = ({closeModal}) => {\n\n    const {contacts} = useContacts();\n    const {createConversation} = useConversations();\n    const [selectedContactIds, setSelectedContactIds] = useState([]);\n    \n    const handleSubmit = (e) => {\n        e.preventDefault();\n        createConversation(selectedContactIds);\n        closeModal();\n    } \n\n    const handleCheckboxChange = (contactId) => {\n        setSelectedContactIds(prevSelectedContactsId => {\n            if (prevSelectedContactsId.includes(contactId)){\n                return prevSelectedContactsId.filter(id => contactId !== id);\n            }else{\n                return [...prevSelectedContactsId, contactId]\n            }\n        })\n    }\n\n    return (\n        <>\n        <Modal.Header closeButton>Create Conversation</Modal.Header>\n        <Modal.Body>\n            <Form onSubmit={handleSubmit}>\n                {contacts.map( contact => (\n                    <Form.Group controlId={contact.id} key={contact.id}>\n                        <Form.Check \n                            type='checkbox'\n                            value={selectedContactIds.includes(contact.id)}\n                            onChange={() => handleCheckboxChange(contact.id)}\n                        />\n                    </Form.Group>\n                ))}\n                <Button type='submit'>Create</Button>\n            </Form>\n        </Modal.Body>\n        </>\n    )\n    }\n\nexport default NewConversationModal;\n"]},"metadata":{},"sourceType":"module"}